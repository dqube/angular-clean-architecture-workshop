import { Component, OnInit<% if(!!viewEncapsulation) { %>, ViewEncapsulation<% }%><% if(changeDetection !== 'Default') { %>, ChangeDetectionStrategy<% }%> } from '@angular/core';
import { ComponentBase } from '@buildmotion/foundation';
import { LoggingService } from '@buildmotion/logging';
import { Router } from '@angular/router';

@Component({<% if(!skipSelector) {%>
  selector: '<%= selector %>',<%}%><% if(inlineTemplate) { %>
  template: `
    <p>
      <%= dasherize(name) %> works!
    </p>
  `,<% } else { %>
  templateUrl: './<%= dasherize(name) %><%= type ? '.' + dasherize(type): '' %>.html',<% } if(inlineStyle) { %>
  styles: [<% if(displayBlock){ %>
    `
      :host {
        display: block;
      }
    `<% } %>
  ]<% } else { %>
  styleUrls: ['./<%= dasherize(name) %><%= type ? '.' + dasherize(type): '' %>.<%= style %>']<% } %><% if(!!viewEncapsulation) { %>,
  encapsulation: ViewEncapsulation.<%= viewEncapsulation %><% } if (changeDetection !== 'Default') { %>,
  changeDetection: ChangeDetectionStrategy.<%= changeDetection %><% } %>
})
export class <%= classify(name) %><%= classify(type) %> extends ComponentBase implements OnInit {

   constructor(loggingService: LoggingService, router: Router) {
    super('<%= classify(name) %>Component', loggingService, router);
  }

  ngOnInit(): void {
  }

}
